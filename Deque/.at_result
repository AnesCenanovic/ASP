{
    "buildhost_description": {
        "id": "etf.c9sec2",
        "os": "Linux 5.4.0-89-generic x86_64\nUbuntu 20.04.5 LTS\n"
    },
    "tools": {
        "compile": "9.4.0",
        "compile[debug]": "9.4.0",
        "debug": "9.2",
        "profile[memcheck]": "valgrind-3.15.0",
        "profile[sgcheck]": "valgrind-3.15.0"
    },
    "status": 4,
    "test_results": {
        "1443": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "main.cpp: In instantiation of ‘class DvostraniRed<int>’:\nmain.cpp:143:19:   required from here\nmain.cpp:76:8: warning: invalid covariant return type for ‘T& DvostraniRed<T>::vrh() [with T = int]’\n   76 |     T& vrh() override{\n      |        ^~~\nmain.cpp:19:22: note: overridden function is ‘const T& Red<T>::vrh() [with T = int]’\n   19 |     virtual const T& vrh()=0; //\n      |                      ^~~\nmain.cpp:80:8: warning: invalid covariant return type for ‘T& DvostraniRed<T>::celo() [with T = int]’\n   80 |     T& celo() override{\n      |        ^~~~\nmain.cpp:20:22: note: overridden function is ‘const T& Red<T>::celo() [with T = int]’\n   20 |     virtual const T& celo()=0; //\n      |                      ^~~~",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": [
                        {
                            "type": "warning",
                            "file": "main.cpp",
                            "line": 76,
                            "col": "8",
                            "message": "invalid covariant return type for 'T& DvostraniRed<T>::vrh() [with T = int]'",
                            "code": "T& vrh() override{"
                        },
                        {
                            "type": "warning",
                            "file": "main.cpp",
                            "line": 80,
                            "col": "8",
                            "message": "invalid covariant return type for 'T& DvostraniRed<T>::celo() [with T = int]'",
                            "code": "T& celo() override{"
                        }
                    ]
                },
                "execute": {
                    "output": "5 50 5 50 40 30 20 10 0",
                    "duration": 0,
                    "status": 1,
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==2316096== Memcheck, a memory error detector\n==2316096== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==2316096== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\n==2316096== Command: outputppVYWi\n==2316096==\n====START_TEST_6850====5 50 5 50 40 30 20 10 0====END_TEST_6850======2316096==\n==2316096== HEAP SUMMARY:\n==2316096==     in use at exit: 0 bytes in 0 blocks\n==2316096==   total heap usage: 12 allocs, 12 frees, 77,040 bytes allocated\n==2316096==\n==2316096== All heap blocks were freed -- no leaks are possible\n==2316096==\n==2316096== For lists of detected and suppressed errors, rerun with: -s\n==2316096== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 5,
                    "output": "==2316108== exp-sgcheck, a stack and global array overrun detector\n==2316108== NOTE: This is an Experimental-Class Valgrind Tool\n==2316108== Copyright (C) 2003-2017, and GNU GPL'd, by OpenWorks Ltd et al.\n==2316108== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\n==2316108== Command: outputppVYWi\n==2316108==\n--2316108-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316108-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316108-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316108-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316108-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316108-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316108-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316108-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n====START_TEST_6850====5 50 5 50 40 30 20 10 0====END_TEST_6850======2316108==\n==2316108== For lists of detected and suppressed errors, rerun with: -s\n==2316108== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "1455": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "main.cpp: In instantiation of ‘class DvostraniRed<int>’:\nmain.cpp:143:19:   required from here\nmain.cpp:76:8: warning: invalid covariant return type for ‘T& DvostraniRed<T>::vrh() [with T = int]’\n   76 |     T& vrh() override{\n      |        ^~~\nmain.cpp:19:22: note: overridden function is ‘const T& Red<T>::vrh() [with T = int]’\n   19 |     virtual const T& vrh()=0; //\n      |                      ^~~\nmain.cpp:80:8: warning: invalid covariant return type for ‘T& DvostraniRed<T>::celo() [with T = int]’\n   80 |     T& celo() override{\n      |        ^~~~\nmain.cpp:20:22: note: overridden function is ‘const T& Red<T>::celo() [with T = int]’\n   20 |     virtual const T& celo()=0; //\n      |                      ^~~~",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": [
                        {
                            "type": "warning",
                            "file": "main.cpp",
                            "line": 76,
                            "col": "8",
                            "message": "invalid covariant return type for 'T& DvostraniRed<T>::vrh() [with T = int]'",
                            "code": "T& vrh() override{"
                        },
                        {
                            "type": "warning",
                            "file": "main.cpp",
                            "line": 80,
                            "col": "8",
                            "message": "invalid covariant return type for 'T& DvostraniRed<T>::celo() [with T = int]'",
                            "code": "T& celo() override{"
                        }
                    ]
                },
                "execute": {
                    "output": "5 10 5 10 20 30 40 50 0",
                    "duration": 0,
                    "status": 1,
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==2316175== Memcheck, a memory error detector\n==2316175== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==2316175== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\n==2316175== Command: outputQONpch\n==2316175==\n====START_TEST_1674====5 10 5 10 20 30 40 50 0====END_TEST_1674======2316175==\n==2316175== HEAP SUMMARY:\n==2316175==     in use at exit: 0 bytes in 0 blocks\n==2316175==   total heap usage: 12 allocs, 12 frees, 77,040 bytes allocated\n==2316175==\n==2316175== All heap blocks were freed -- no leaks are possible\n==2316175==\n==2316175== For lists of detected and suppressed errors, rerun with: -s\n==2316175== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 5,
                    "output": "==2316187== exp-sgcheck, a stack and global array overrun detector\n==2316187== NOTE: This is an Experimental-Class Valgrind Tool\n==2316187== Copyright (C) 2003-2017, and GNU GPL'd, by OpenWorks Ltd et al.\n==2316187== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\n==2316187== Command: outputQONpch\n==2316187==\n--2316187-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316187-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316187-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316187-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316187-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316187-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316187-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316187-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n====START_TEST_1674====5 10 5 10 20 30 40 50 0====END_TEST_1674======2316187==\n==2316187== For lists of detected and suppressed errors, rerun with: -s\n==2316187== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "1456": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "main.cpp: In instantiation of ‘class DvostraniRed<int>’:\nmain.cpp:143:19:   required from here\nmain.cpp:76:8: warning: invalid covariant return type for ‘T& DvostraniRed<T>::vrh() [with T = int]’\n   76 |     T& vrh() override{\n      |        ^~~\nmain.cpp:19:22: note: overridden function is ‘const T& Red<T>::vrh() [with T = int]’\n   19 |     virtual const T& vrh()=0; //\n      |                      ^~~\nmain.cpp:80:8: warning: invalid covariant return type for ‘T& DvostraniRed<T>::celo() [with T = int]’\n   80 |     T& celo() override{\n      |        ^~~~\nmain.cpp:20:22: note: overridden function is ‘const T& Red<T>::celo() [with T = int]’\n   20 |     virtual const T& celo()=0; //\n      |                      ^~~~",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": [
                        {
                            "type": "warning",
                            "file": "main.cpp",
                            "line": 76,
                            "col": "8",
                            "message": "invalid covariant return type for 'T& DvostraniRed<T>::vrh() [with T = int]'",
                            "code": "T& vrh() override{"
                        },
                        {
                            "type": "warning",
                            "file": "main.cpp",
                            "line": 80,
                            "col": "8",
                            "message": "invalid covariant return type for 'T& DvostraniRed<T>::celo() [with T = int]'",
                            "code": "T& celo() override{"
                        }
                    ]
                },
                "execute": {
                    "output": "10 10\n5 4 3 2 1 1 2 3 4 5 \n5 4 3 2 1 1 2 3 4 5 \n4 3 2 1 1 2 3 4 5",
                    "duration": 0,
                    "status": 1,
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==2316267== Memcheck, a memory error detector\n==2316267== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==2316267== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\n==2316267== Command: outputJCIxyi\n==2316267==\n====START_TEST_2352====10 10\n5 4 3 2 1 1 2 3 4 5\n5 4 3 2 1 1 2 3 4 5\n4 3 2 1 1 2 3 4 5 ====END_TEST_2352======2316267==\n==2316267== HEAP SUMMARY:\n==2316267==     in use at exit: 0 bytes in 0 blocks\n==2316267==   total heap usage: 33 allocs, 33 frees, 77,544 bytes allocated\n==2316267==\n==2316267== All heap blocks were freed -- no leaks are possible\n==2316267==\n==2316267== For lists of detected and suppressed errors, rerun with: -s\n==2316267== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 5,
                    "output": "==2316279== exp-sgcheck, a stack and global array overrun detector\n==2316279== NOTE: This is an Experimental-Class Valgrind Tool\n==2316279== Copyright (C) 2003-2017, and GNU GPL'd, by OpenWorks Ltd et al.\n==2316279== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\n==2316279== Command: outputJCIxyi\n==2316279==\n--2316279-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316279-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316279-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316279-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316279-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316279-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316279-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316279-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n====START_TEST_2352====10 10\n5 4 3 2 1 1 2 3 4 5\n5 4 3 2 1 1 2 3 4 5\n4 3 2 1 1 2 3 4 5 ====END_TEST_2352======2316279==\n==2316279== For lists of detected and suppressed errors, rerun with: -s\n==2316279== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "1457": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 0,
                    "output": "main.cpp: In instantiation of ‘class DvostraniRed<int>’:\nmain.cpp:143:19:   required from here\nmain.cpp:76:8: warning: invalid covariant return type for ‘T& DvostraniRed<T>::vrh() [with T = int]’\n   76 |     T& vrh() override{\n      |        ^~~\nmain.cpp:19:22: note: overridden function is ‘const T& Red<T>::vrh() [with T = int]’\n   19 |     virtual const T& vrh()=0; //\n      |                      ^~~\nmain.cpp:80:8: warning: invalid covariant return type for ‘T& DvostraniRed<T>::celo() [with T = int]’\n   80 |     T& celo() override{\n      |        ^~~~\nmain.cpp:20:22: note: overridden function is ‘const T& Red<T>::celo() [with T = int]’\n   20 |     virtual const T& celo()=0; //\n      |                      ^~~~",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": [
                        {
                            "type": "warning",
                            "file": "main.cpp",
                            "line": 76,
                            "col": "8",
                            "message": "invalid covariant return type for 'T& DvostraniRed<T>::vrh() [with T = int]'",
                            "code": "T& vrh() override{"
                        },
                        {
                            "type": "warning",
                            "file": "main.cpp",
                            "line": 80,
                            "col": "8",
                            "message": "invalid covariant return type for 'T& DvostraniRed<T>::celo() [with T = int]'",
                            "code": "T& celo() override{"
                        }
                    ]
                },
                "execute": {
                    "output": "399999\n0\n399999\n0",
                    "duration": 0,
                    "status": 1,
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 4,
                    "output": "==2316339== Memcheck, a memory error detector\n==2316339== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==2316339== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\n==2316339== Command: outputKDQ1Wj\n==2316339==\n====START_TEST_462====399999\n0\n399999\n0====END_TEST_462======2316339==\n==2316339== HEAP SUMMARY:\n==2316339==     in use at exit: 0 bytes in 0 blocks\n==2316339==   total heap usage: 800,002 allocs, 800,002 frees, 19,276,800 bytes allocated\n==2316339==\n==2316339== All heap blocks were freed -- no leaks are possible\n==2316339==\n==2316339== For lists of detected and suppressed errors, rerun with: -s\n==2316339== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 10,
                    "output": "",
                    "exit_code": 143,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "1458": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 0,
                    "output": "main.cpp: In instantiation of ‘class DvostraniRed<int>’:\nmain.cpp:143:19:   required from here\nmain.cpp:76:8: warning: invalid covariant return type for ‘T& DvostraniRed<T>::vrh() [with T = int]’\n   76 |     T& vrh() override{\n      |        ^~~\nmain.cpp:19:22: note: overridden function is ‘const T& Red<T>::vrh() [with T = int]’\n   19 |     virtual const T& vrh()=0; //\n      |                      ^~~\nmain.cpp:80:8: warning: invalid covariant return type for ‘T& DvostraniRed<T>::celo() [with T = int]’\n   80 |     T& celo() override{\n      |        ^~~~\nmain.cpp:20:22: note: overridden function is ‘const T& Red<T>::celo() [with T = int]’\n   20 |     virtual const T& celo()=0; //\n      |                      ^~~~",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": [
                        {
                            "type": "warning",
                            "file": "main.cpp",
                            "line": 76,
                            "col": "8",
                            "message": "invalid covariant return type for 'T& DvostraniRed<T>::vrh() [with T = int]'",
                            "code": "T& vrh() override{"
                        },
                        {
                            "type": "warning",
                            "file": "main.cpp",
                            "line": 80,
                            "col": "8",
                            "message": "invalid covariant return type for 'T& DvostraniRed<T>::celo() [with T = int]'",
                            "code": "T& celo() override{"
                        }
                    ]
                },
                "execute": {
                    "output": "10 108 108\n108 106 104 102 100 100 102 104 106 108 \nok ok ok ok 10 108 108",
                    "duration": 0,
                    "status": 1,
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 2,
                    "output": "==2316480== Memcheck, a memory error detector\n==2316480== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==2316480== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\n==2316480== Command: outputKQLusi\n==2316480==\n====START_TEST_9297====10 108 108\n108 106 104 102 100 100 102 104 106 108\nok ok ok ok 10 108 108====END_TEST_9297======2316480==\n==2316480== HEAP SUMMARY:\n==2316480==     in use at exit: 0 bytes in 0 blocks\n==2316480==   total heap usage: 30 allocs, 30 frees, 78,004 bytes allocated\n==2316480==\n==2316480== All heap blocks were freed -- no leaks are possible\n==2316480==\n==2316480== For lists of detected and suppressed errors, rerun with: -s\n==2316480== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 5,
                    "output": "==2316492== exp-sgcheck, a stack and global array overrun detector\n==2316492== NOTE: This is an Experimental-Class Valgrind Tool\n==2316492== Copyright (C) 2003-2017, and GNU GPL'd, by OpenWorks Ltd et al.\n==2316492== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\n==2316492== Command: outputKQLusi\n==2316492==\n--2316492-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316492-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316492-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316492-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316492-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316492-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316492-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316492-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n====START_TEST_9297====10 108 108\n108 106 104 102 100 100 102 104 106 108\nok ok ok ok 10 108 108====END_TEST_9297======2316492==\n==2316492== For lists of detected and suppressed errors, rerun with: -s\n==2316492== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        },
        "1459": {
            "success": true,
            "status": 1,
            "tools": {
                "patch": {
                    "success": true
                },
                "compile[debug]": {
                    "status": 1,
                    "duration": 1,
                    "output": "main.cpp: In instantiation of ‘class DvostraniRed<int>’:\nmain.cpp:143:19:   required from here\nmain.cpp:76:8: warning: invalid covariant return type for ‘T& DvostraniRed<T>::vrh() [with T = int]’\n   76 |     T& vrh() override{\n      |        ^~~\nmain.cpp:19:22: note: overridden function is ‘const T& Red<T>::vrh() [with T = int]’\n   19 |     virtual const T& vrh()=0; //\n      |                      ^~~\nmain.cpp:80:8: warning: invalid covariant return type for ‘T& DvostraniRed<T>::celo() [with T = int]’\n   80 |     T& celo() override{\n      |        ^~~~\nmain.cpp:20:22: note: overridden function is ‘const T& Red<T>::celo() [with T = int]’\n   20 |     virtual const T& celo()=0; //\n      |                      ^~~~",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": [
                        {
                            "type": "warning",
                            "file": "main.cpp",
                            "line": 76,
                            "col": "8",
                            "message": "invalid covariant return type for 'T& DvostraniRed<T>::vrh() [with T = int]'",
                            "code": "T& vrh() override{"
                        },
                        {
                            "type": "warning",
                            "file": "main.cpp",
                            "line": 80,
                            "col": "8",
                            "message": "invalid covariant return type for 'T& DvostraniRed<T>::celo() [with T = int]'",
                            "code": "T& celo() override{"
                        }
                    ]
                },
                "execute": {
                    "output": "108 106 104 102 100 100 102 104 106 108 \nok ok ok ok 10 108 108",
                    "duration": 0,
                    "status": 1,
                    "exit_code": 0,
                    "success": true
                },
                "debug": {
                    "success": true
                },
                "profile[memcheck]": {
                    "status": 1,
                    "duration": 1,
                    "output": "==2316561== Memcheck, a memory error detector\n==2316561== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==2316561== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\n==2316561== Command: outputvV16kg\n==2316561==\n====START_TEST_8133====108 106 104 102 100 100 102 104 106 108\nok ok ok ok 10 108 108\n====END_TEST_8133======2316561==\n==2316561== HEAP SUMMARY:\n==2316561==     in use at exit: 0 bytes in 0 blocks\n==2316561==   total heap usage: 30 allocs, 30 frees, 78,004 bytes allocated\n==2316561==\n==2316561== All heap blocks were freed -- no leaks are possible\n==2316561==\n==2316561== For lists of detected and suppressed errors, rerun with: -s\n==2316561== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                },
                "profile[sgcheck]": {
                    "status": 1,
                    "duration": 5,
                    "output": "==2316579== exp-sgcheck, a stack and global array overrun detector\n==2316579== NOTE: This is an Experimental-Class Valgrind Tool\n==2316579== Copyright (C) 2003-2017, and GNU GPL'd, by OpenWorks Ltd et al.\n==2316579== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info\n==2316579== Command: outputvV16kg\n==2316579==\n--2316579-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316579-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316579-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316579-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316579-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316579-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316579-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n--2316579-- warning: evaluate_Dwarf3_Expr: unhandled DW_OP_ 0x93\n====START_TEST_8133====108 106 104 102 100 100 102 104 106 108\nok ok ok ok 10 108 108\n====END_TEST_8133======2316579==\n==2316579== For lists of detected and suppressed errors, rerun with: -s\n==2316579== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)",
                    "exit_code": 0,
                    "success": true,
                    "parsed_output": []
                }
            }
        }
    },
    "time": 1668972941
}